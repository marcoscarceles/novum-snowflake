{"version":3,"file":"static/webpack/static/development/pages/index.js.69c6bb03030071d22ab4.hot-update.js","sources":["webpack:///./components/SnowflakeApp.js"],"sourcesContent":["// @flow\n\nimport TrackSelector from '../components/TrackSelector'\nimport NightingaleChart from '../components/NightingaleChart'\nimport KeyboardListener from '../components/KeyboardListener'\nimport Track from '../components/Track'\nimport Wordmark from '../components/Wordmark'\nimport LevelThermometer from '../components/LevelThermometer'\nimport { eligibleTitles, trackIds, milestones, milestoneToPoints } from '../constants'\nimport PointSummaries from '../components/PointSummaries'\nimport type { Milestone, MilestoneMap, TrackId } from '../constants'\nimport React from 'react'\nimport TitleSelector from '../components/TitleSelector'\n\ntype SnowflakeAppState = {\n  milestoneByTrack: MilestoneMap,\n  name: string,\n  title: string,\n  focusedTrackId: TrackId,\n}\n\nconst hashToState = (hash: String): ?SnowflakeAppState => {\n  if (!hash) return null\n  const result = defaultState()\n  const hashValues = hash.split('#')[1].split(',')\n  if (!hashValues) return null\n  trackIds.forEach((trackId, i) => {\n    result.milestoneByTrack[trackId] = coerceMilestone(Number(hashValues[i]))\n  })\n  if (hashValues[trackIds.length]) result.name = decodeURI(hashValues[trackIds.length])\n  if (hashValues[trackIds.length + 1]) result.title = decodeURI(hashValues[trackIds.length + 1])\n  return result\n}\n\nconst coerceMilestone = (value: number): Milestone => {\n  // HACK I know this is goofy but i'm dealing with flow typing\n  switch (value) {\n    case 0: return 0\n    case 1: return 1\n    case 2: return 2\n    case 3: return 3\n    case 4: return 4\n    case 5: return 5\n    default: return 0\n  }\n}\n\nconst emptyState = (): SnowflakeAppState => {\n  return {\n    name: '',\n    title: '',\n    milestoneByTrack: {\n\n      \"TIME_MANAGEMENT\": 0,\n      \"SELF_MANAGEMENT\": 0,\n      \"PROJECT_MANAGEMENT\": 0,\n      \"INITIATIVE\": 0,\n\n      \"EFFECTIVE_COMMUNICATION\": 0,\n      \"CONFLICT_RESOLUTION\": 0,\n      \"FLEXIBILITY_/ DEALING WITH AMBIGUITY\": 0,\n      \"CREATIVITY_THINKING\": 0,\n\n      \"MOTIVATING_OTHERS\": 0,\n      \"DEVELOPING_OTHERS\": 0,\n      \"TEAMWORK\": 0,\n      \"ACCOMPLISHMENT\": 0,\n\n      \"ENGINEERING_WOW PRACTICES\": 0,\n      \"SOFTWARE_FUNDAMENTALS\": 0,\n      \"SOFTWARE_AT SCALE\": 0,\n      \"QUALITY\": 0,\n\n      \"MOBILE\": 0,\n      \"WEB_CLIENT\": 0,\n      \"SERVER\": 0,\n      \"FOUNDATIONS\": 0,\n    },\n    focusedTrackId: 'TIME_MANAGEMENT'\n  }\n}\n\nconst defaultState = (): SnowflakeAppState => {\n  return {\n    name: 'Cersei Lannister',\n    title: 'Staff Engineer',\n    milestoneByTrack: {\n\n      \"TIME_MANAGEMENT\": 3,\n      \"SELF_MANAGEMENT\": 0,\n      \"PROJECT_MANAGEMENT\": 3,\n      \"INITIATIVE\": 4,\n\n      \"EFFECTIVE_COMMUNICATION\": 5,\n      \"CONFLICT_RESOLUTION\": 1,\n      \"FLEXIBILITY_/ DEALING WITH AMBIGUITY\": 0,\n      \"CREATIVITY_THINKING\": 2,\n\n      \"MOTIVATING_OTHERS\": 1,\n      \"DEVELOPING_OTHERS\": 0,\n      \"TEAMWORK\": 1,\n      \"ACCOMPLISHMENT\": 3,\n\n      \"ENGINEERING_WOW PRACTICES\": 2,\n      \"SOFTWARE_FUNDAMENTALS\": 0,\n      \"SOFTWARE_AT SCALE\": 0,\n      \"QUALITY\": 0,\n\n      \"MOBILE\": 0,\n      \"WEB_CLIENT\": 0,\n      \"SERVER\": 0,\n      \"FOUNDATIONS\": 0,\n\n    },\n    focusedTrackId: 'MOBILE'\n  }\n}\n\nconst stateToHash = (state: SnowflakeAppState) => {\n  if (!state || !state.milestoneByTrack) return null\n  const values = trackIds.map(trackId => state.milestoneByTrack[trackId]).concat(encodeURI(state.name), encodeURI(state.title))\n  return values.join(',')\n}\n\ntype Props = {}\n\nclass SnowflakeApp extends React.Component<Props, SnowflakeAppState> {\n  constructor(props: Props) {\n    super(props)\n    this.state = emptyState()\n  }\n\n  componentDidUpdate() {\n    const hash = stateToHash(this.state)\n    if (hash) window.location.replace(`#${hash}`)\n  }\n\n  componentDidMount() {\n    const state = hashToState(window.location.hash)\n    if (state) {\n      this.setState(state)\n    } else {\n      this.setState(defaultState())\n    }\n  }\n\n  render() {\n    return (\n      <main>\n        <style jsx global>{`\n          body {\n            font-family: Helvetica;\n          }\n          main {\n            width: 960px;\n            margin: 0 auto;\n          }\n          .name-input {\n            border: none;\n            display: block;\n            border-bottom: 2px solid #fff;\n            font-size: 30px;\n            line-height: 40px;\n            font-weight: bold;\n            width: 380px;\n            margin-bottom: 10px;\n          }\n          .name-input:hover, .name-input:focus {\n            border-bottom: 2px solid #ccc;\n            outline: 0;\n          }\n          a {\n            color: #888;\n            text-decoration: none;\n          }\n        `}</style>\n        <div style={{ margin: '19px auto 0' }}>\n          {/* <a href=\"https://medium.com/\" target=\"_blank\">\n            <Wordmark />\n          </a> */}\n          <h1>Novum Engineering Career Framework</h1>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <div style={{ flex: 1 }}>\n            <form>\n              <input\n                type=\"text\"\n                className=\"name-input\"\n                value={this.state.name}\n                onChange={e => this.setState({ name: e.target.value })}\n                placeholder=\"State your name\"\n              />\n            </form>\n            <h2>Please rate your level of competency on each of the areas below.</h2>\n            <p>If you want more information about each of the competencies, visit our <a href=\"https://docs.google.com/spreadsheets/d/177yMyIl7Oxahb-iPu3nemjhTJ9sLl-t1svFjgoBaXaw/edit?usp=sharing\">Competency Matrix in Google Sheets</a>.</p>\n            <p>Since it’s impossible to accurately assess a level of competency based on a short sentence the following additional resources are provided:</p>\n            <ul>\n              <li>A company wide level impact expectation: All levels are somewhat equivalent among competencies. The impact of an individual performance on the company can be used to steer in doubt between two levels.</li>\n              <li>A set of behaviours expected of someone having reached that level.</li>\n              <li>A set of practices that could (but not necessarily does) demonstrate this level of  competency.</li>\n            </ul>\n            <p style={{ fontWeight: 'bold' }}>After completing your self-evaluation (including your full name above and scoring below), please submit the generated URL to <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSe19Y43rLSX-5pMOgmxXSJ0TFkAePr-w5r79AQ4hdCcLg4vmg/viewform?usp=sf_link\">this form</a>.</p>\n          </div>\n          <div style={{ flex: 0 }}>\n            <NightingaleChart\n              milestoneByTrack={this.state.milestoneByTrack}\n              focusedTrackId={this.state.focusedTrackId}\n              handleTrackMilestoneChangeFn={(track, milestone) => this.handleTrackMilestoneChange(track, milestone)} />\n          </div>\n        </div>\n        <TrackSelector\n          milestoneByTrack={this.state.milestoneByTrack}\n          focusedTrackId={this.state.focusedTrackId}\n          setFocusedTrackIdFn={this.setFocusedTrackId.bind(this)} />\n        <KeyboardListener\n          selectNextTrackFn={this.shiftFocusedTrack.bind(this, 1)}\n          selectPrevTrackFn={this.shiftFocusedTrack.bind(this, -1)}\n          increaseFocusedMilestoneFn={this.shiftFocusedTrackMilestoneByDelta.bind(this, 1)}\n          decreaseFocusedMilestoneFn={this.shiftFocusedTrackMilestoneByDelta.bind(this, -1)} />\n        <Track\n          milestoneByTrack={this.state.milestoneByTrack}\n          trackId={this.state.focusedTrackId}\n          handleTrackMilestoneChangeFn={(track, milestone) => this.handleTrackMilestoneChange(track, milestone)} />\n        <div style={{ display: 'flex', paddingBottom: '20px' }}>\n          <div style={{ flex: 1 }}>\n            Made with ❤️ by Novum Eng, based on an original idea from <a href=\"https://medium.engineering\" target=\"_blank\">Medium Eng</a>.\n            Learn about <a href=\"https://medium.com/s/engineering-growth-framework\" target=\"_blank\">their version of this growth framework</a>\n            {' '}and <a href=\"https://medium.engineering/engineering-growth-at-medium-4935b3234d25\" target=\"_blank\">what they do currently</a>.\n            Get the <a href=\"https://github.com/Medium/snowflake\" target=\"_blank\">source code</a>.\n            Read the <a href=\"https://medium.com/p/85e078bc15b7\" target=\"_blank\">terms of service</a>.\n          </div>\n        </div>\n      </main >\n    )\n  }\n\n  handleTrackMilestoneChange(trackId: TrackId, milestone: Milestone) {\n    const milestoneByTrack = this.state.milestoneByTrack\n    milestoneByTrack[trackId] = milestone\n\n    const titles = eligibleTitles(milestoneByTrack)\n    const title = titles.indexOf(this.state.title) === -1 ? titles[0] : this.state.title\n\n    this.setState({ milestoneByTrack, focusedTrackId: trackId, title })\n  }\n\n  shiftFocusedTrack(delta: number) {\n    let index = trackIds.indexOf(this.state.focusedTrackId)\n    index = (index + delta + trackIds.length) % trackIds.length\n    const focusedTrackId = trackIds[index]\n    this.setState({ focusedTrackId })\n  }\n\n  setFocusedTrackId(trackId: TrackId) {\n    let index = trackIds.indexOf(trackId)\n    const focusedTrackId = trackIds[index]\n    this.setState({ focusedTrackId })\n  }\n\n  shiftFocusedTrackMilestoneByDelta(delta: number) {\n    let prevMilestone = this.state.milestoneByTrack[this.state.focusedTrackId]\n    let milestone = prevMilestone + delta\n    if (milestone < 0) milestone = 0\n    if (milestone > 5) milestone = 5\n    this.handleTrackMilestoneChange(this.state.focusedTrackId, ((milestone: any): Milestone))\n  }\n\n  setTitle(title: string) {\n    let titles = eligibleTitles(this.state.milestoneByTrack)\n    title = titles.indexOf(title) == -1 ? titles[0] : title\n    this.setState({ title })\n  }\n}\n\nexport default SnowflakeApp\n"],"mappings":"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","sourceRoot":""}